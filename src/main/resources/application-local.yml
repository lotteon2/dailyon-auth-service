spring:
  config:
    activate:
      on-profile: local
    import: optional:configserver:http://127.0.0.1:8888
  # rabbitmq settings
#  rabbitmq:
#    host: 127.0.0.1
#    port: 5672
#    username: guest
#    password: guest
  cloud:
    discovery:
      enabled: false
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: 77ecb33640211a3fffc5554eb2344bbc
            client-secret: UGtcEk5Ik1jQ2OUKs5AGvASAkHHsDppY
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao #"http://localhost:8080/app/login/kakao"
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image, account_email
            client-name: Kakao
        provider:
          kakao:
            authorization_uri: https://kauth.kakao.com/oauth/authorize
            token_uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user_name_attribute: id
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/auth-service
    username: root
    password: 123456
  jpa:
    hibernate:
      ddl-auto: create
    generate-ddl: true
    # Bean이 생성되기 전에 ddl 실행
    defer-datasource-initialization: true
    properties:
      hibernate:
        format_sql: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka
  instance:
    instance-id: ${spring.application.name}:${server.port}

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
      springframework:
        jdbc:
          core:
            JdbcTemplate: DEBUG